{"version":3,"sources":["components/SocialLinks/LinkedIn_IMG.png","components/SocialLinks/Instagram_IMG.png","components/SocialLinks/Github_IMG.png","components/SocialLinks/Dribbble_IMG.png","components/Logo/Logo.png","components/HomeNav/Display_Admin_IMG.png","components/HomeNav/Price_Tags_IMG.png","components/HomeNav/Maps_IMG.png","components/HomeNav/OCFL_IMG.png","components/HomeNav/PHP_Plugins_IMG.png","components/HomeNav/Any_Decision_IMG.png","components/SocialLinks/social.js","components/Logo/logo.js","components/HomeNav/homenav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Social","react_default","a","createElement","className","href","src","linkedin","alt","instagram","github","dribbble","Component","Logo","logo","HomeNav","Fragment","displaynav","data-id","tagsnav","mapsnav","ocflnav","phpnav","anynav","App","homenav","social","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","$","on","e","thisId","this","attr","html","ocfl","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0b264de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LinkedIn_IMG.33ef0967.png\";","module.exports = __webpack_public_path__ + \"static/media/Instagram_IMG.8eab3474.png\";","module.exports = __webpack_public_path__ + \"static/media/Github_IMG.cb44bbe5.png\";","module.exports = __webpack_public_path__ + \"static/media/Dribbble_IMG.7a8a3c24.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.fe1f8089.png\";","module.exports = __webpack_public_path__ + \"static/media/Display_Admin_IMG.258f0917.png\";","module.exports = __webpack_public_path__ + \"static/media/Price_Tags_IMG.9308cf66.png\";","module.exports = __webpack_public_path__ + \"static/media/Maps_IMG.1712460d.png\";","module.exports = __webpack_public_path__ + \"static/media/OCFL_IMG.53d09ef9.png\";","module.exports = __webpack_public_path__ + \"static/media/PHP_Plugins_IMG.4f0a6af5.png\";","module.exports = __webpack_public_path__ + \"static/media/Any_Decision_IMG.3604c859.png\";","import React, { Component } from 'react';\r\nimport linkedin from './LinkedIn_IMG.png';\r\nimport instagram from './Instagram_IMG.png';\r\nimport github from './Github_IMG.png';\r\nimport dribbble from './Dribbble_IMG.png';\r\n\r\nclass Social extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"social-link-wrap\">\r\n        <a href=\"https://linkedin.com/in/micahrobinsondesigns/\"><img src={linkedin} className=\"social-link\" alt=\"LinkedIn Profile\" /></a>\r\n        <a href=\"https://www.instagram.com/micahrobinsondesigns/\"><img src={instagram} className=\"social-link\" alt=\"Instagram Profile\" /></a>\r\n        <a href=\"https://github.com/micahrobinsondesigns\"><img src={github} className=\"social-link\" alt=\"Github Profile\" /></a>\r\n        <a href=\"https://dribbble.com/micahrobinsondesigns\"><img src={dribbble} className=\"social-link\" alt=\"Dribbble Profile\" /></a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Social;\r\n","import React, { Component } from 'react';\r\nimport logo from './Logo.png';\r\n\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <img src={logo} className=\"mrd-logo\" alt=\"Micah Robinson Designs Logo\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\nimport Logo from '../Logo/logo.js';\r\n\r\nimport displaynav from './Display_Admin_IMG.png';\r\nimport tagsnav from './Price_Tags_IMG.png';\r\nimport mapsnav from './Maps_IMG.png';\r\nimport ocflnav from './OCFL_IMG.png';\r\nimport phpnav from './PHP_Plugins_IMG.png';\r\nimport anynav from './Any_Decision_IMG.png';\r\n\r\nclass HomeNav extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"left-trees\">\r\n          <img src={displaynav} className=\"trees tree-1\" data-id=\"display\" alt=\"Display Admin Project\" />\r\n          <img src={tagsnav} className=\"trees tree-2\" data-id=\"tags\" alt=\"Digital Pricetag Project\" />\r\n          <img src={mapsnav} className=\"trees tree-3\" data-id=\"maps\" alt=\"Store Map Project\" />\r\n        </div>\r\n            <Logo />\r\n        <div className=\"right-trees\">\r\n          <img src={ocflnav} className=\"trees tree-4\" data-id=\"ocfl\" alt=\"OCFL Projects\" />\r\n          <img src={phpnav} className=\"trees tree-5\" data-id=\"php\" alt=\"PHP Plugins Project\" />\r\n          <img src={anynav} className=\"trees tree-6\" data-id=\"any\" alt=\"Any Decision Project\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeNav;\r\n","import React, { Component } from 'react';\n\nimport Social from './components/SocialLinks/social.js';\nimport './App.css';\nimport HomeNav from './components/HomeNav/homenav.js';\nclass App extends Component {\n\n  render() {\n    return (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<div className=\"white-paper-moutain\" alt=\"paper background\">\n\t\t\t\t\t<HomeNav />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"project-content\"></div>\n\t\t\t\t<div className=\"bottom-area\">\n\t\t\t\t\t<Social />\n\t\t\t\t\t<div className=\"resume-wrap\">\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from 'jquery';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n$('.trees').on('click', function(e){\n\tconst thisId= $(this).attr('data-id');\n\tconst dataObject= {\n\t\t\"ocfl\":\"<ul><li>HTML</li><li>CSS</li><li>jQUeery</li></ul>\",\n\t};\n\t\n\t$('.project-content').html(dataObject[thisId]);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}